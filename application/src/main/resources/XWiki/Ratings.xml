<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>Ratings</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1223390115000</creationDate>
<date>1293055511000</date>
<contentUpdateDate>1293055511000</contentUpdateDate>
<version>1.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden><attachment>
<filename>star.gif</filename>
<filesize>1120</filesize>
<author>XWiki.Admin</author>
<date>1223392182000</date>
<version>1.1</version>
<comment></comment><content>R0lGODlhGQBLAOYAAPWGNf784eTi49TR0f3ANvu+bf/MmfPy8uPg4filTv7dSvzGcvioT/3guvu0
Tuvq6/7xYfq5af7mif3LXP////7w3d/e3vidQfTz9P3ixP/nnP7kUv7ncf/MM/7+9fm1gv7Uaf3G
Wf76xOvq6tfV1f75sf7WSvmtSv7Zef3v5f7PQ/7vlPaSOv7ngv7emPnAmf748/7tptvY2f7oWf/M
Zv7fUfzYpv7uw/ilRf7XQ/7vuP70Y/7JPvu3T+fm5vmvU/712PqyTP738v7Xc/73nP72gP7hZff3
9+/v7/aPOf/elP/fefeUQv7sXfy8U/ioWPq/df3kzv7FO/7UUf70bP756P786v76uv73k/7dh//Q
O/7yq/7iav3kvf743PvVrP7wzf7uv/7ql/8zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAEHAGMALAAAAAAZAEsAAAf/gBSCg4SFhoeHR4qIjIRHSCM+GI2NGAgUlkeUiA8Pgj5Im4ZHFpqC
FgemohQPFoRIMg8Ys4uJjzKhhBYyvDIII5ODRwcPCCQyPps+I6ZHxbKrFMvCktGsFsGCDwLRlgeF
zgiqjEcy34cH5pQyI43p54i4lCO5iNONSPWHSOKND/DxxoGrNsiHhQeqBAh0hCDYCHaQLAiY5GOh
sIlHBEwUhsQHKIuDOn4cVYtcSWsoU6oUdhLlIwEVV2JApREkpU6CSOhbRepIGCBIsKFsVaWDChgI
Gtp0BAuJBi1alhw55uNBPgzjFB0YYWHAABgmcojVMewAsQcjKTyyYOFjFQli/+Ny4SIhhgdWCAVl
1ORFDBcFgAMDrkEYCAVU1DS1CEyY8IbHj1dQEAAQkwAkHjjUECtFCoHPUlRwmLxT0AGJHlB0Xq2i
9RQYNRGRurSktYnbt41QGFCaULoRMRQ0rjGjuBUEvakd2FK8SRMI0CGIwElOEhHoVEpcKbJjR4nT
NkkdwLIDi4cDoQKUCHA4fCkP7A0KaGuKGTluFE4jUfSoKobkIWHQSWX8LaUWfyslqOCC0SC4kjMC
5KUSEqnIk9IRl1AQlIH7+JDCC0LEwqEj2HwAwAflyDILVuRg4AMJMCQhYxQ+DNDLQQINUwwJJBxg
ABNAPpGCaWZ1ogqE0KTwRb0CF1yAw5M4RABFA2rFpFcuBjAAJQ4ndHlCEGDaMBlAR9j3g5dfngCl
Aw4sAFtpGFxWQQEXyAgAADLKyABsCqEjkRBPsCBok03ikMEIPZLDFgxaPtllED104UM/jCAxAAVs
OuCEEyF06sKG7pBAQacTlGrqEBTIkM0hllBQKgg3UACGCxOAIM2qhrhIQRYueABLRR5UgQmuhRyQ
jCBJjcCVBaGY1cgj1yDEHyRpMbLVCKmA05ItIzLo7beCBAIAOw==
</content></attachment><attachment>
<filename>smallstar.gif</filename>
<filesize>891</filesize>
<author>XWiki.Admin</author>
<date>1223394833000</date>
<version>1.1</version>
<comment></comment><content>R0lGODlhFAA8AOYAAOfm5vTz9OTi4/Py8tvY2ePg4filRevq6v7dSv7fUf3LXPaPOfmtSv7XQ/7x
Yf7oWf3GWf7489fV1f7kUv7WSvu0TvqyTP7FO/7+9f7PQ/m1gv7tpvidQf/fef7iav756P70Y/3v
5f3ANtTR0fWGNf738v7sXfzGcv/nnPilTv/MM/7hZf7uv//Mmf7ngv743P7yq/72gP7wzf7w3f7v
lP7UafmvU/ioT/7ql/7ncfvVrP3guvq/df/QO/712P7emP76uv7mifu3T/3kzv70bPzYpv784fy8
U/73nN/e3uvq6+/v7/f39////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5
BAAAAAAALAAAAAAUADwAAAf/gE2Cg4SFhodMTIeLggEFTQWKjIVKSk0AS5OETEmSSQOSk0pJg0sE
SgEBiYQDSgUSAJMAkkwFqJqXg0wBuE2jhAK4jgOFAwTEhwQHi8aLBJmLy4cA0ofQhkuRiLGDSUqS
AqGbj00HzwdJwbOI4QICvE1MS5jihPNL9au9+/yM+vzywvWr1ETCNU2cmLBYkgSeplEfVEQoUMDh
IibPUPTowETCqSVLHHJKgulDkAYoG3jwsAGDL1qKXuBAQLMmggQJfDQhJWiVC5o4E0wYOoFGEwHI
BAlYgiEHygsXRIi4kOHowZ5JCnTIkIGCVworRlwdZGzDTZwP0hYY2xMAjLQm2BzIdUBwGxK5RIDE
AAFiQCdESTAYuSSApKID9XoG84tPHoAAbAUtqZQ03j9DiRL328x5k+ZJTCp9RvSI4ehC80KUOHUa
awANGjCiSqWZCQAJERYsGAJgBAEC3ggpEYAqhI4UHAwoN8Bjh+VSglosN8CgugULRY4SQtzERnUG
FpZXOBFhKaEAS2dw0E1Ct+7yAgtxinBDuXUhALRZa1Kh/xEIAJrGTBMAKmCggU0QYNF5TRhYQxMy
/KDAJQuSNUgBB6BDygCVbeKLN5ndM1qGoHgGWmudpShIIAA7</content></attachment>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.Ratings</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>833889f4-7f7c-4b52-9a3a-02c46e14d79d</guid>
<property>
<cache>forbid</cache>
</property>
<property>
<code>var XWiki = (function(XWiki){

  var widgets = XWiki.widgets = XWiki.widgets || {};

  widgets.Rating = Class.create({

    options : {
       injectionPoint : $('document-title')
      ,injectionPosition: 'before'
      ,forceInjectionIfRatingPresent: false
      ,servicePage: new XWiki.Document("Ratings", "XWiki")
      ,addBehaviorToPresentRating:true
    },

    initialize:function(options){
      // Clone default options from the prototype so that they are not shared and extend options with passed parameters
      this.options = Object.extend(Object.clone(this.options), options || { });
      
      if (!$('body').down('.ratingContainer') || this.forceInjectionIfRatingPresent) {
        // If there is no rating container yet present or if we are forced to inject rating,
        // we query the service page for this document rating information, in order to inject it
        var queryParameters = {
           'rating' : XWiki.currentDocument.space + "." + XWiki.currentDocument.page
          ,'ajax':'1'
          ,'xpage':'plain'
        };
        var ajx = new Ajax.Request(this.options.servicePage.getURL('get'), {
           method:'get'
          ,parameters: queryParameters
          ,onSuccess: this.injectRating.bind(this)
          ,onFailure: function(){
             new XWiki.widgets.Notification("$msg.get('rating.ajaxGetRatingError')", 'error', {inactive: true}).show();
           }
        });
      }
      else if ($('body').down('div.ratingContainer') &amp;&amp; this.options.addBehaviorToPresentRating) {
        this.ratingsContainer = $('body').down('.ratingContainer');
        this.observeStars(this.ratingsContainer.down('ul.rating'));
      }
    },

    injectRating: function(ajaxResponse) {
      var insertion = {};
      insertion[this.options.injectionPosition] = ajaxResponse.responseText;
      var inserted = this.options.injectionPoint.insert(insertion);
      this.ratingsContainer = inserted.up();
      this.observeStars(this.ratingsContainer.down('ul.rating'));
    },

    observeStars: function(starList) {
      var self = this;
      starList.select("li a.star").invoke("observe", "click", function(event){
        var queryParameters = {
           'doc' : XWiki.currentDocument.space + "." + XWiki.currentDocument.page
          ,'vote' : event.element().innerHTML
          ,'ajax':'1'
          ,'xpage':'plain'
          ,'outputSyntax' : 'plain'
        };
        var ajx = new Ajax.Request(self.options.servicePage.getURL('get'), {
           method:'post'
          ,parameters: queryParameters
          ,onSuccess: self.onVoteSuccessful.bind(self)
          ,onFailure: function(){
             new XWiki.widgets.Notification("$msg.get('rating.ajaxVoteError')", 'error', {inactive: true}).show();
           }
        });
      });
    },

    onVoteSuccessful: function(ajaxResponse) {
      var ratingData = ajaxResponse.responseJSON;
      if(typeof ratingData.error != "undefined") {
        new XWiki.widgets.Notification("$msg.get('rating.ajaxVoteError') :" + ratingData.error, 'error', {inactive: true}).show();     
        return;
      }
      this.ratingsContainer.down('span.totalVotes').innerHTML = ratingData.totalVotes;
      this.ratingsContainer.down('span.averageVote').innerHTML = ratingData.averageVote;
      if(this.ratingsContainer.down('span.yourVoteValue')) {
        this.ratingsContainer.down('span.yourVoteValue').innerHTML = ratingData.userVote;
      } else {
        this.ratingsContainer.down('span.yourVote').innerHTML = ratingData.userVoteDisplayValue;
      }
      var newWidth = parseFloat(ratingData.averageVote) * 20;
      this.ratingsContainer.down('li.current').setStyle({'width': newWidth + '%'});
    }
  });

  return XWiki;

})(XWiki || {});

document.observe("xwiki:dom:loaded", function(){
  if (XWiki.contextaction == "view" &amp;&amp; XWiki.currentDocument.space != 'XWiki') {
    // FIXME : find a better discrimination strategy than not in XWiki space
    // (probably should be config parameter(s) in the ratings administration)

    var injectionPoint = $('breadcrumbs') ? $('breadcrumbs') : $('document-title');
    var injectionPosition = $('breadcrumbs') ? 'after' : 'before';

    var rating = new XWiki.widgets.Rating({
        injectionPoint: injectionPoint
       ,injectionPosition: injectionPosition
    });
  }
});

function setRatingsActivation() {
   if ($('activateratings').checked) {
     var url = "$xwiki.getURL('XWiki.AdminRatingsSheet', 'view', 'xpage=plain&amp;action=activateratings')";
   }
   else {
     var url = "$xwiki.getURL('XWiki.AdminRatingsSheet', 'view', 'xpage=plain&amp;action=deactivateratings')";
   }
   new Ajax.Request(url, {
     method: 'get',
     onLoading: function()
     {
        $('activationstatus').innerHTML = "Activating ratings...";
     },
     onSuccess: function(transport)
     {
        $('activationstatus').innerHTML = transport.responseText;
     }
   });
};</code>
</property>
<property>
<name>Ratings Javascript</name>
</property>
<property>
<parse>1</parse>
</property>
<property>
<use>always</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.Ratings</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>6485b9c9-cff5-4fcd-b78a-abbd78e5e4cd</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>ul.rating,
ul.rating .current,
ul.rating a:hover, 
ul.rating a:focus,
ul.rating a:active {
  background: url($doc.getAttachmentURL('smallstar.gif')) left -1000px repeat-x;
}

ul.rating {
  position:relative;
  width:100px;
  height:20px;
  overflow:hidden;
  list-style:none;
  margin-top:0px !important;
  margin-bottom:0px !important;
  margin-left:0px !important;
  padding:0px !important;
  background-position: left top;
}
ul.rating li {
  display: inline;
}
ul.rating a,
ul.rating .current{
  position:absolute;
  top:0;
  left:0;
  text-indent:-1000em;
  height:25px;
  line-height:25px;
  outline:none;
  overflow:hidden;
  border: none;
}
ul.rating a:hover,
ul.rating a:active,
ul.rating a:focus {
  background-position: left -40px;
}
ul.rating a.oneStar {
  width:20%;
  z-index:6;
}
ul.rating a.twoStars {
  width:40%;
  z-index:5;
}
ul.rating a.threeStars {
  width:60%;
  z-index:4;
}
ul.rating a.fourStars {
  width:80%;
  z-index:3;
}
ul.rating a.fiveStars {
  width:100%;
  z-index:2;
}
ul.rating .current {
  z-index:1;
  background-position: left -20px;
}

div.ratingContainer div.informations span.documentRating,
div.ratingContainer div.informations span.yourVote {
  display:block;
}

div.ratingContainer div.informations {
  font-size:0.7em;
  color:grey;
  margin-top:5px;
}

/* the section below targets all elements under a .ratingWrapper div, which is present only when
   the rating UI is injected through an AJAX request in the DOM (vs. direct use of the rating macro server side) */

div.ratingWrapper {
  float:right;
}

div.ratingWrapper div.informations {
  text-align:right;
}

div.ratingWrapper div.informations span.documentRating,
div.ratingWrapper div.informations span.yourVote {
  display:inline;
}

div.ratingWrapper div.informations span.yourVote:before {
  content: '- ';
}

div.ratingWrapper ul.rating {
  margin-left:auto !important;
}</code>
</property>
<property>
<name>Ratings CSS</name>
</property>
<property>
<parse>1</parse>
</property>
<property>
<use>always</use>
</property>
</object>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator>|</separator>
<separators>|,</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>XWiki.Ratings</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>c7899ab1-fd87-4a81-968b-492523d924aa</guid>
<property>
<tags/>
</property>
</object>
<content>{{velocity}}
#**
 * Macro that displays the rating for a document
 *#
#macro(displayDocumentRating $document)
#set($averageRating = $services.ratings.getAverageRating($document))
#set($userRating = $services.ratings.getRating($document, $context.user))
#set($displayedWidth = $mathtool.mul($averageRating.averageVote, 20))
&lt;div class="ratingContainer"&gt;
  &lt;div class="averageRating"&gt;
    &lt;ul class="rating"&gt;
      &lt;li style="width:${displayedWidth}%;" class="current"&gt;&lt;/li&gt;
      #set($ratingClasses = ["oneStar", "twoStars", "threeStars", "fourStars", "fiveStars"])
      #foreach($r in [1..5])
        #set($ratingClass = $ratingClasses.get($mathtool.sub($r, 1)))
        &lt;li&gt;
          #if($document.hasAccessLevel('edit'))
            &lt;a href="#" title="$msg.get("rating.${ratingClass}")" class="$ratingClass star"&gt;$r&lt;/a&gt;
          #end
        &lt;/li&gt;
      #end
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div class="informations"&gt;
    &lt;span class="documentRating"&gt;
      $msg.get('rating.documentRatingInformations', [
        "&lt;span class='totalVotes'&gt;${averageRating.nbVotes}&lt;/span&gt;",
        "&lt;span class='averageVote'&gt;${averageRating.averageVote}&lt;/span&gt;"
      ])
    &lt;/span&gt;
    &lt;span class="yourVote"&gt;
      #if($context.user == 'XWiki.XWikiGuest')
        $msg.get('rating.loginToVote')
      #elseif(!$document.hasAccessLevel('edit'))
        $msg.get('rating.notAllowedOnThisDocument')
      #elseif(!$userRating)
        $msg.get('rating.clickTheStarsToVote')
      #else
        $msg.get('rating.yourVote', ["&lt;span class='yourVoteValue'&gt;${userRating.vote}&lt;/span&gt;"])
      #end
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;
#end
#if("$!{request.xpage}" == "plain")
  #if("$!{request.vote}" != "")
$response.setContentType('application/json')
{
    #set($rdoc = $xwiki.getDocument($request.doc))
    #set($vote = $util.parseInt($request.vote))
    #if($vote &gt; 0 &amp;&amp; $vote &lt;= 5)
      #set($ok = $services.ratings.setRating($rdoc, $context.user, $vote))
      #if($ok) 
        #if("$!{request.method}" != "")
          #set($ar = $services.ratings.getAverageRating($rdoc, $request.method))
        #else
          #set($ar = $services.ratings.getAverageRating($rdoc))
        #end
        #set($avgvote = $ar.averageVote)
        #set($uservote = $services.ratings.getRating($rdoc, $context.user))
        #set($nbVotes = $ar.nbVotes)
        #set($userVoteDisplayValue = $msg.get('rating.yourVote', ["&lt;span class='yourVoteValue'&gt;${uservote.vote}&lt;/span&gt;"]))
        "averageVote" : "$escapetool.javascript($avgvote)",
        "userVote" : "$escapetool.javascript($uservote.vote)",
        "userVoteDisplayValue" : "$escapetool.javascript($userVoteDisplayValue)",
        "totalVotes" : "$escapetool.javascript($nbVotes)"
      #else 
        "error" : "$escapetool.javascript($msg.get('rating.saveexception'))"
      #end
    #elseif($vote == 0)
        "error" : "$escapetool.javascript($msg.get('rating.votenotvalid'))"
    #else
        "error" : "$escapetool.javascript($msg.get('rating.voteoutofbounds'))"
    #end
}
  #elseif("${request.rating}" != "")
    #set($ratedDoc=$xwiki.getDocument("$request.rating"))

    {{html}}
    &lt;div class="ratingWrapper"&gt;
    #displayDocumentRating($ratedDoc)
    &lt;/div&gt;
    {{/html}}

  #end
#end
{{/velocity}}</content></xwikidoc>
